import { describe, expect, test } from "bun:test"
import { ceil, floor, round, trunc } from "../rounding"

describe("math", () => {
	test("ceil", () => {
		expect(ceil(0)).toBe(0)
		expect(ceil(-0)).toBe(-0)
		expect(ceil(1)).toBe(1)
		expect(ceil(-1)).toBe(-1)
		expect(ceil(1.1)).toBe(2)
		expect(ceil(-1.1)).toBe(-1)
		expect(ceil(1.9)).toBe(2)
		expect(ceil(-1.9)).toBe(-1)
		expect(ceil(2147483647)).toBe(2147483647)
		expect(ceil(-2147483648)).toBe(-2147483648)
		expect(ceil(9223372036854776000)).toBe(9223372036854776000)
		expect(ceil(-9223372036854776000)).toBe(-9223372036854776000)
		expect(ceil(9223372036854777000)).toBe(9223372036854778000)
		expect(ceil(-9223372036854777000)).toBe(-9223372036854778000)
		expect(ceil(NaN)).toBe(NaN)
		expect(ceil(Infinity)).toBe(Infinity)
		expect(ceil(-Infinity)).toBe(-Infinity)
	})
	test("floor", () => {
		expect(floor(0)).toBe(0)
		expect(floor(-0)).toBe(-0)
		expect(floor(1)).toBe(1)
		expect(floor(-1)).toBe(-1)
		expect(floor(1.1)).toBe(1)
		expect(floor(-1.1)).toBe(-2)
		expect(floor(1.9)).toBe(1)
		expect(floor(-1.9)).toBe(-2)
		expect(floor(2147483647)).toBe(2147483647)
		expect(floor(-2147483648)).toBe(-2147483648)
		expect(floor(9223372036854776000)).toBe(9223372036854776000)
		expect(floor(-9223372036854776000)).toBe(-9223372036854776000)
		expect(floor(9223372036854777000)).toBe(9223372036854777000)
		expect(floor(-9223372036854777000)).toBe(-9223372036854777000)
		expect(floor(NaN)).toBe(NaN)
		expect(floor(Infinity)).toBe(Infinity)
		expect(floor(-Infinity)).toBe(-Infinity)
	})
	test("round", () => {
		expect(round(0)).toBe(0)
		expect(round(-0)).toBe(-0)
		expect(round(1)).toBe(1)
		expect(round(-1)).toBe(-1)
		expect(round(1.1)).toBe(1)
		expect(round(-1.1)).toBe(-1)
		// C# style rounding (to even)
		expect(round(0.5)).toBe(0)
		expect(round(-0.5)).toBe(-0)
		expect(round(1.5)).toBe(2)
		expect(round(-1.5)).toBe(-2)
		expect(round(2.5)).toBe(2)
		expect(round(-2.5)).toBe(-2)
		expect(round(2147483647.5)).toBe(2147483648)
		expect(round(-2147483647.5)).toBe(-2147483648)
		expect(round(2147483648.5)).toBe(2147483648)
		expect(round(-2147483648.5)).toBe(-2147483648)

		expect(round(1.9)).toBe(2)
		expect(round(-1.9)).toBe(-2)
		expect(round(2147483647)).toBe(2147483647)
		expect(round(-2147483648)).toBe(-2147483648)
		expect(round(9223372036854776000)).toBe(9223372036854776000)
		expect(round(-9223372036854776000)).toBe(-9223372036854776000)
		expect(round(9223372036854777000)).toBe(9223372036854778000)
		expect(round(-9223372036854777000)).toBe(-9223372036854778000)
		expect(round(NaN)).toBe(NaN)
		expect(round(Infinity)).toBe(Infinity)
		expect(round(-Infinity)).toBe(-Infinity)
	})
	test("trunc", () => {
		expect(trunc(0)).toBe(0)
		expect(trunc(-0)).toBe(-0)
		expect(trunc(1)).toBe(1)
		expect(trunc(-1)).toBe(-1)
		expect(trunc(1.1)).toBe(1)
		expect(trunc(-1.1)).toBe(-1)
		expect(trunc(1.5)).toBe(1)
		expect(trunc(-1.5)).toBe(-1)
		expect(trunc(1.9)).toBe(1)
		expect(trunc(-1.9)).toBe(-1)
		expect(trunc(2147483647)).toBe(2147483647)
		expect(trunc(-2147483648)).toBe(-2147483648)
		expect(trunc(9223372036854776000)).toBe(9223372036854776000)
		expect(trunc(-9223372036854776000)).toBe(-9223372036854776000)
		expect(trunc(9223372036854777000)).toBe(9223372036854778000)
		expect(trunc(-9223372036854777000)).toBe(-9223372036854778000)
		expect(trunc(NaN)).toBe(NaN)
		expect(trunc(Infinity)).toBe(Infinity)
		expect(trunc(-Infinity)).toBe(-Infinity)
	})
})
